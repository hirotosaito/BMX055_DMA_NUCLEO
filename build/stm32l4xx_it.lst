ARM GAS  /tmp/ccEX0YUs.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB130:
  28              		.file 1 "Src/stm32l4xx_it.c"
   1:Src/stm32l4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32l4xx_it.c **** /**
   3:Src/stm32l4xx_it.c ****   ******************************************************************************
   4:Src/stm32l4xx_it.c ****   * @file    stm32l4xx_it.c
   5:Src/stm32l4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32l4xx_it.c ****   ******************************************************************************
   7:Src/stm32l4xx_it.c ****   * @attention
   8:Src/stm32l4xx_it.c ****   *
   9:Src/stm32l4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32l4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32l4xx_it.c ****   *
  12:Src/stm32l4xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32l4xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32l4xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32l4xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32l4xx_it.c ****   *
  17:Src/stm32l4xx_it.c ****   ******************************************************************************
  18:Src/stm32l4xx_it.c ****   */
  19:Src/stm32l4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32l4xx_it.c **** 
  21:Src/stm32l4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32l4xx_it.c **** #include "main.h"
  23:Src/stm32l4xx_it.c **** #include "stm32l4xx_it.h"
  24:Src/stm32l4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32l4xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32l4xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32l4xx_it.c **** 
  28:Src/stm32l4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32l4xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32l4xx_it.c **** 
ARM GAS  /tmp/ccEX0YUs.s 			page 2


  31:Src/stm32l4xx_it.c **** /* USER CODE END TD */
  32:Src/stm32l4xx_it.c **** 
  33:Src/stm32l4xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32l4xx_it.c ****  
  36:Src/stm32l4xx_it.c **** /* USER CODE END PD */
  37:Src/stm32l4xx_it.c **** 
  38:Src/stm32l4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32l4xx_it.c **** 
  41:Src/stm32l4xx_it.c **** /* USER CODE END PM */
  42:Src/stm32l4xx_it.c **** 
  43:Src/stm32l4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32l4xx_it.c **** 
  46:Src/stm32l4xx_it.c **** /* USER CODE END PV */
  47:Src/stm32l4xx_it.c **** 
  48:Src/stm32l4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32l4xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32l4xx_it.c **** 
  51:Src/stm32l4xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32l4xx_it.c **** 
  53:Src/stm32l4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32l4xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32l4xx_it.c **** 
  56:Src/stm32l4xx_it.c **** /* USER CODE END 0 */
  57:Src/stm32l4xx_it.c **** 
  58:Src/stm32l4xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Src/stm32l4xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_rx;
  60:Src/stm32l4xx_it.c **** extern DMA_HandleTypeDef hdma_i2c1_tx;
  61:Src/stm32l4xx_it.c **** extern I2C_HandleTypeDef hi2c1;
  62:Src/stm32l4xx_it.c **** /* USER CODE BEGIN EV */
  63:Src/stm32l4xx_it.c **** 
  64:Src/stm32l4xx_it.c **** /* USER CODE END EV */
  65:Src/stm32l4xx_it.c **** 
  66:Src/stm32l4xx_it.c **** /******************************************************************************/
  67:Src/stm32l4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  68:Src/stm32l4xx_it.c **** /******************************************************************************/
  69:Src/stm32l4xx_it.c **** /**
  70:Src/stm32l4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  71:Src/stm32l4xx_it.c ****   */
  72:Src/stm32l4xx_it.c **** void NMI_Handler(void)
  73:Src/stm32l4xx_it.c **** {
  29              		.loc 1 73 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  74:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  75:Src/stm32l4xx_it.c **** 
  76:Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  77:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  78:Src/stm32l4xx_it.c **** 
  79:Src/stm32l4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Src/stm32l4xx_it.c **** }
  34              		.loc 1 80 1 view .LVU1
  35 0000 7047     		bx	lr
ARM GAS  /tmp/ccEX0YUs.s 			page 3


  36              		.cfi_endproc
  37              	.LFE130:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB131:
  81:Src/stm32l4xx_it.c **** 
  82:Src/stm32l4xx_it.c **** /**
  83:Src/stm32l4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Src/stm32l4xx_it.c ****   */
  85:Src/stm32l4xx_it.c **** void HardFault_Handler(void)
  86:Src/stm32l4xx_it.c **** {
  49              		.loc 1 86 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  87:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Src/stm32l4xx_it.c **** 
  89:Src/stm32l4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Src/stm32l4xx_it.c ****   while (1)
  56              		.loc 1 90 3 discriminator 1 view .LVU3
  91:Src/stm32l4xx_it.c ****   {
  92:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Src/stm32l4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Src/stm32l4xx_it.c ****   }
  57              		.loc 1 94 3 discriminator 1 view .LVU4
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE131:
  62              		.section	.text.MemManage_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	MemManage_Handler
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	MemManage_Handler:
  71              	.LFB132:
  95:Src/stm32l4xx_it.c **** }
  96:Src/stm32l4xx_it.c **** 
  97:Src/stm32l4xx_it.c **** /**
  98:Src/stm32l4xx_it.c ****   * @brief This function handles Memory management fault.
  99:Src/stm32l4xx_it.c ****   */
 100:Src/stm32l4xx_it.c **** void MemManage_Handler(void)
 101:Src/stm32l4xx_it.c **** {
  72              		.loc 1 101 1 view -0
  73              		.cfi_startproc
  74              		@ Volatile: function does not return.
  75              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccEX0YUs.s 			page 4


  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.L5:
 102:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Src/stm32l4xx_it.c **** 
 104:Src/stm32l4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Src/stm32l4xx_it.c ****   while (1)
  79              		.loc 1 105 3 discriminator 1 view .LVU6
 106:Src/stm32l4xx_it.c ****   {
 107:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Src/stm32l4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Src/stm32l4xx_it.c ****   }
  80              		.loc 1 109 3 discriminator 1 view .LVU7
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE132:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv4-sp-d16
  93              	BusFault_Handler:
  94              	.LFB133:
 110:Src/stm32l4xx_it.c **** }
 111:Src/stm32l4xx_it.c **** 
 112:Src/stm32l4xx_it.c **** /**
 113:Src/stm32l4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 114:Src/stm32l4xx_it.c ****   */
 115:Src/stm32l4xx_it.c **** void BusFault_Handler(void)
 116:Src/stm32l4xx_it.c **** {
  95              		.loc 1 116 1 view -0
  96              		.cfi_startproc
  97              		@ Volatile: function does not return.
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.L7:
 117:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Src/stm32l4xx_it.c **** 
 119:Src/stm32l4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Src/stm32l4xx_it.c ****   while (1)
 102              		.loc 1 120 3 discriminator 1 view .LVU9
 121:Src/stm32l4xx_it.c ****   {
 122:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Src/stm32l4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Src/stm32l4xx_it.c ****   }
 103              		.loc 1 124 3 discriminator 1 view .LVU10
 104 0000 FEE7     		b	.L7
 105              		.cfi_endproc
 106              	.LFE133:
 108              		.section	.text.UsageFault_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	UsageFault_Handler
 111              		.syntax unified
 112              		.thumb
ARM GAS  /tmp/ccEX0YUs.s 			page 5


 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	UsageFault_Handler:
 117              	.LFB134:
 125:Src/stm32l4xx_it.c **** }
 126:Src/stm32l4xx_it.c **** 
 127:Src/stm32l4xx_it.c **** /**
 128:Src/stm32l4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 129:Src/stm32l4xx_it.c ****   */
 130:Src/stm32l4xx_it.c **** void UsageFault_Handler(void)
 131:Src/stm32l4xx_it.c **** {
 118              		.loc 1 131 1 view -0
 119              		.cfi_startproc
 120              		@ Volatile: function does not return.
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.L9:
 132:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Src/stm32l4xx_it.c **** 
 134:Src/stm32l4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Src/stm32l4xx_it.c ****   while (1)
 125              		.loc 1 135 3 discriminator 1 view .LVU12
 136:Src/stm32l4xx_it.c ****   {
 137:Src/stm32l4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Src/stm32l4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Src/stm32l4xx_it.c ****   }
 126              		.loc 1 139 3 discriminator 1 view .LVU13
 127 0000 FEE7     		b	.L9
 128              		.cfi_endproc
 129              	.LFE134:
 131              		.section	.text.SVC_Handler,"ax",%progbits
 132              		.align	1
 133              		.global	SVC_Handler
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	SVC_Handler:
 140              	.LFB135:
 140:Src/stm32l4xx_it.c **** }
 141:Src/stm32l4xx_it.c **** 
 142:Src/stm32l4xx_it.c **** /**
 143:Src/stm32l4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Src/stm32l4xx_it.c ****   */
 145:Src/stm32l4xx_it.c **** void SVC_Handler(void)
 146:Src/stm32l4xx_it.c **** {
 141              		.loc 1 146 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 147:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Src/stm32l4xx_it.c **** 
 149:Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:Src/stm32l4xx_it.c **** 
ARM GAS  /tmp/ccEX0YUs.s 			page 6


 152:Src/stm32l4xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Src/stm32l4xx_it.c **** }
 146              		.loc 1 153 1 view .LVU15
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE135:
 151              		.section	.text.DebugMon_Handler,"ax",%progbits
 152              		.align	1
 153              		.global	DebugMon_Handler
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	DebugMon_Handler:
 160              	.LFB136:
 154:Src/stm32l4xx_it.c **** 
 155:Src/stm32l4xx_it.c **** /**
 156:Src/stm32l4xx_it.c ****   * @brief This function handles Debug monitor.
 157:Src/stm32l4xx_it.c ****   */
 158:Src/stm32l4xx_it.c **** void DebugMon_Handler(void)
 159:Src/stm32l4xx_it.c **** {
 161              		.loc 1 159 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 160:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Src/stm32l4xx_it.c **** 
 162:Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Src/stm32l4xx_it.c **** 
 165:Src/stm32l4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:Src/stm32l4xx_it.c **** }
 166              		.loc 1 166 1 view .LVU17
 167 0000 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE136:
 171              		.section	.text.PendSV_Handler,"ax",%progbits
 172              		.align	1
 173              		.global	PendSV_Handler
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 177              		.fpu fpv4-sp-d16
 179              	PendSV_Handler:
 180              	.LFB137:
 167:Src/stm32l4xx_it.c **** 
 168:Src/stm32l4xx_it.c **** /**
 169:Src/stm32l4xx_it.c ****   * @brief This function handles Pendable request for system service.
 170:Src/stm32l4xx_it.c ****   */
 171:Src/stm32l4xx_it.c **** void PendSV_Handler(void)
 172:Src/stm32l4xx_it.c **** {
 181              		.loc 1 172 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
ARM GAS  /tmp/ccEX0YUs.s 			page 7


 173:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Src/stm32l4xx_it.c **** 
 175:Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Src/stm32l4xx_it.c **** 
 178:Src/stm32l4xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Src/stm32l4xx_it.c **** }
 186              		.loc 1 179 1 view .LVU19
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE137:
 191              		.section	.text.SysTick_Handler,"ax",%progbits
 192              		.align	1
 193              		.global	SysTick_Handler
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	SysTick_Handler:
 200              	.LFB138:
 180:Src/stm32l4xx_it.c **** 
 181:Src/stm32l4xx_it.c **** /**
 182:Src/stm32l4xx_it.c ****   * @brief This function handles System tick timer.
 183:Src/stm32l4xx_it.c ****   */
 184:Src/stm32l4xx_it.c **** void SysTick_Handler(void)
 185:Src/stm32l4xx_it.c **** {
 201              		.loc 1 185 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI0:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 186:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Src/stm32l4xx_it.c **** 
 188:Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Src/stm32l4xx_it.c ****   HAL_IncTick();
 210              		.loc 1 189 3 view .LVU21
 211 0002 FFF7FEFF 		bl	HAL_IncTick
 212              	.LVL0:
 190:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Src/stm32l4xx_it.c **** 
 192:Src/stm32l4xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 193:Src/stm32l4xx_it.c **** }
 213              		.loc 1 193 1 is_stmt 0 view .LVU22
 214 0006 08BD     		pop	{r3, pc}
 215              		.cfi_endproc
 216              	.LFE138:
 218              		.section	.text.DMA1_Channel6_IRQHandler,"ax",%progbits
 219              		.align	1
 220              		.global	DMA1_Channel6_IRQHandler
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
 224              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccEX0YUs.s 			page 8


 226              	DMA1_Channel6_IRQHandler:
 227              	.LFB139:
 194:Src/stm32l4xx_it.c **** 
 195:Src/stm32l4xx_it.c **** /******************************************************************************/
 196:Src/stm32l4xx_it.c **** /* STM32L4xx Peripheral Interrupt Handlers                                    */
 197:Src/stm32l4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 198:Src/stm32l4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 199:Src/stm32l4xx_it.c **** /* please refer to the startup file (startup_stm32l4xx.s).                    */
 200:Src/stm32l4xx_it.c **** /******************************************************************************/
 201:Src/stm32l4xx_it.c **** 
 202:Src/stm32l4xx_it.c **** /**
 203:Src/stm32l4xx_it.c ****   * @brief This function handles DMA1 channel6 global interrupt.
 204:Src/stm32l4xx_it.c ****   */
 205:Src/stm32l4xx_it.c **** void DMA1_Channel6_IRQHandler(void)
 206:Src/stm32l4xx_it.c **** {
 228              		.loc 1 206 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI1:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
 207:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 0 */
 208:Src/stm32l4xx_it.c **** 
 209:Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 0 */
 210:Src/stm32l4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_tx);
 237              		.loc 1 210 3 view .LVU24
 238 0002 0248     		ldr	r0, .L17
 239 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 240              	.LVL1:
 211:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel6_IRQn 1 */
 212:Src/stm32l4xx_it.c **** 
 213:Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel6_IRQn 1 */
 214:Src/stm32l4xx_it.c **** }
 241              		.loc 1 214 1 is_stmt 0 view .LVU25
 242 0008 08BD     		pop	{r3, pc}
 243              	.L18:
 244 000a 00BF     		.align	2
 245              	.L17:
 246 000c 00000000 		.word	hdma_i2c1_tx
 247              		.cfi_endproc
 248              	.LFE139:
 250              		.section	.text.DMA1_Channel7_IRQHandler,"ax",%progbits
 251              		.align	1
 252              		.global	DMA1_Channel7_IRQHandler
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	DMA1_Channel7_IRQHandler:
 259              	.LFB140:
 215:Src/stm32l4xx_it.c **** 
 216:Src/stm32l4xx_it.c **** /**
 217:Src/stm32l4xx_it.c ****   * @brief This function handles DMA1 channel7 global interrupt.
 218:Src/stm32l4xx_it.c ****   */
ARM GAS  /tmp/ccEX0YUs.s 			page 9


 219:Src/stm32l4xx_it.c **** void DMA1_Channel7_IRQHandler(void)
 220:Src/stm32l4xx_it.c **** {
 260              		.loc 1 220 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI2:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 221:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel7_IRQn 0 */
 222:Src/stm32l4xx_it.c **** 
 223:Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel7_IRQn 0 */
 224:Src/stm32l4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c1_rx);
 269              		.loc 1 224 3 view .LVU27
 270 0002 0248     		ldr	r0, .L21
 271 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 272              	.LVL2:
 225:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel7_IRQn 1 */
 226:Src/stm32l4xx_it.c **** 
 227:Src/stm32l4xx_it.c ****   /* USER CODE END DMA1_Channel7_IRQn 1 */
 228:Src/stm32l4xx_it.c **** }
 273              		.loc 1 228 1 is_stmt 0 view .LVU28
 274 0008 08BD     		pop	{r3, pc}
 275              	.L22:
 276 000a 00BF     		.align	2
 277              	.L21:
 278 000c 00000000 		.word	hdma_i2c1_rx
 279              		.cfi_endproc
 280              	.LFE140:
 282              		.section	.text.I2C1_EV_IRQHandler,"ax",%progbits
 283              		.align	1
 284              		.global	I2C1_EV_IRQHandler
 285              		.syntax unified
 286              		.thumb
 287              		.thumb_func
 288              		.fpu fpv4-sp-d16
 290              	I2C1_EV_IRQHandler:
 291              	.LFB141:
 229:Src/stm32l4xx_it.c **** 
 230:Src/stm32l4xx_it.c **** /**
 231:Src/stm32l4xx_it.c ****   * @brief This function handles I2C1 event interrupt.
 232:Src/stm32l4xx_it.c ****   */
 233:Src/stm32l4xx_it.c **** void I2C1_EV_IRQHandler(void)
 234:Src/stm32l4xx_it.c **** {
 292              		.loc 1 234 1 is_stmt 1 view -0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 08B5     		push	{r3, lr}
 297              	.LCFI3:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 3, -8
 300              		.cfi_offset 14, -4
 235:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 0 */
 236:Src/stm32l4xx_it.c **** 
ARM GAS  /tmp/ccEX0YUs.s 			page 10


 237:Src/stm32l4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 0 */
 238:Src/stm32l4xx_it.c ****   HAL_I2C_EV_IRQHandler(&hi2c1);
 301              		.loc 1 238 3 view .LVU30
 302 0002 0248     		ldr	r0, .L25
 303 0004 FFF7FEFF 		bl	HAL_I2C_EV_IRQHandler
 304              	.LVL3:
 239:Src/stm32l4xx_it.c ****   /* USER CODE BEGIN I2C1_EV_IRQn 1 */
 240:Src/stm32l4xx_it.c **** 
 241:Src/stm32l4xx_it.c ****   /* USER CODE END I2C1_EV_IRQn 1 */
 242:Src/stm32l4xx_it.c **** }
 305              		.loc 1 242 1 is_stmt 0 view .LVU31
 306 0008 08BD     		pop	{r3, pc}
 307              	.L26:
 308 000a 00BF     		.align	2
 309              	.L25:
 310 000c 00000000 		.word	hi2c1
 311              		.cfi_endproc
 312              	.LFE141:
 314              		.text
 315              	.Letext0:
 316              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 317              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 318              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 319              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 320              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 321              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 322              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 323              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 324              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 325              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  /tmp/ccEX0YUs.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_it.c
     /tmp/ccEX0YUs.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccEX0YUs.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccEX0YUs.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccEX0YUs.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccEX0YUs.s:63     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccEX0YUs.s:70     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccEX0YUs.s:86     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccEX0YUs.s:93     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccEX0YUs.s:109    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccEX0YUs.s:116    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccEX0YUs.s:132    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccEX0YUs.s:139    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccEX0YUs.s:152    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccEX0YUs.s:159    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccEX0YUs.s:172    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccEX0YUs.s:179    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccEX0YUs.s:192    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccEX0YUs.s:199    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccEX0YUs.s:219    .text.DMA1_Channel6_IRQHandler:0000000000000000 $t
     /tmp/ccEX0YUs.s:226    .text.DMA1_Channel6_IRQHandler:0000000000000000 DMA1_Channel6_IRQHandler
     /tmp/ccEX0YUs.s:246    .text.DMA1_Channel6_IRQHandler:000000000000000c $d
     /tmp/ccEX0YUs.s:251    .text.DMA1_Channel7_IRQHandler:0000000000000000 $t
     /tmp/ccEX0YUs.s:258    .text.DMA1_Channel7_IRQHandler:0000000000000000 DMA1_Channel7_IRQHandler
     /tmp/ccEX0YUs.s:278    .text.DMA1_Channel7_IRQHandler:000000000000000c $d
     /tmp/ccEX0YUs.s:283    .text.I2C1_EV_IRQHandler:0000000000000000 $t
     /tmp/ccEX0YUs.s:290    .text.I2C1_EV_IRQHandler:0000000000000000 I2C1_EV_IRQHandler
     /tmp/ccEX0YUs.s:310    .text.I2C1_EV_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_i2c1_tx
hdma_i2c1_rx
HAL_I2C_EV_IRQHandler
hi2c1
